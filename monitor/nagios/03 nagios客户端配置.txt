在被监控机安装 
新增用户和组
groupadd nagcmd
useradd -g nagcmd -s /sbin/nologin nagios
(如果安装中报没有c编译器，就 yum install gcc)
下载nagios插件
wget http://sourceforge.net/projects/nagiosplug/files/nagiosplug/1.4.15/nagios-plugins-1.4.14.tar.gz
tar xzvf nagios-plugins-1.4.14.tar.gz
cd nagios-plugins-1.4.14
./configure --with-nagios-user=nagios --with-nagios-group=nagios
make && make install

NRPE 安装

# cd /usr/local/src/
wget http://sourceforge.net/projects/nagios/files/nrpe-2.x/nrpe-2.12/nrpe-2.12.tar.gz/download
# tar zxvf nrpe-2.12.tar.gz 

yum -y install openssl openssl-devel

cd nrpe-2.12
./configure --with-nrpe-user=nagios --with-nrpe-group=nagios
make all
make install-plugin
make install-daemon
make install-daemon-config
make install-xinetd

chown nagios.nagios /usr/local/nagios
chown -R nagios.nagios /usr/local/nagios/libexec

(4) 编辑nrpe配置文件 
vim /usr/local/nagios/etc/nrpe.cfg
allowed_hosts=127.0.0.1,192.168.10.8 
默认为allowed_hosts=127.0.0.1 
5) 启动nrpe 
yum -y install xinetd
vi /etc/xinetd.d/nrpe
service nrpe
{
        flags           = REUSE
        socket_type     = stream        
        wait            = no
        user            = nrpe
        server          = /usr/sbin/nrpe
        server_args     = -c /etc/nagios/nrpe.cfg --inetd --no-ssl
        log_on_failure  += USERID
        disable         = no
		only_from       = 127.0.0.1 192.168.3.87
}
:wq

vi /etc/services
/sfm-db-server
nrpe            5666/tcp                        # NRPE
:wq

vi /etc/sysconfig/iptables
-A INPUT -m state --state NEW -m tcp -p tcp --dport 5666 -j ACCEPT
:wq
service iptables restart

service xinetd restart

netstat -lntp
检查5666端口是否启动

验证本机nrpe是否配置成功
/usr/local/nagios/libexec/check_nrpe -H localhost
NRPE v2.12 

流量监控
http://lymrg.blog.51cto.com/1551327/473822
yum -y install net-snmp-utils bc

查看接口
./check_traffic.sh -V 2c -C public -H 127.0.0.1 -L

查看网口流量
./check_traffic.sh -V 2c -C public -H 127.0.0.1 -I 2 -w 12,30 -c 15,35 -M –b

yum install -y net-snmp net-snmp-devel net-snmp-libs net-snmp-perl net-snmp-utils mrtg

vi /etc/init.d/snmpd
OPTIONS="-LS0-6d -Lf /dev/null -p /var/run/snmpd.pid -x TCP:199"

可以测试是否能够正常采集到数据（如果取不到，检查snmpd的团体名称、被监控者的IP，还有selinux是否关闭）
[root@10.60.30.53 /usr/local/nagios/libexec]$ ./check_traffic.sh -V 2c -C 团体名称 -H 10.60.30.52 -I 2 -w 1200,1500 -c 1700,1800 -K -B
OK - The Traffic In is 0.37KB, Out is 0.75KB, Total is 1.12KB. The Check Interval is 1129s |In=0.37KB;1200;1700;0;0 Out=0.75KB;1500;1800;0;0 Total=1.12KB;2700;3500;0;0 Interval=1129s;1200;1800;0;0
[root@10.60.30.53 /usr/local/nagios/libexec]$
解释：
-V snmp协议版本
-C 共同体名
-I 参数对应上面-L输出的网卡index值。标示监视相应的网卡。
-w 警告值 -c报警值
4，nagios的配置
增加nagios的command.cfg
# 'check_traffic' command definition
define command{
command_name check_traffic
command_line $USER1$/check_traffic.sh -V 2c -C 团体名称 -H $HOSTADDRESS$ -I $ARG1$ -w $ARG2$ -c $ARG3$ -K -B
}
解释：-I 第几个网卡 -K –B设置的报警参数数值是KB，不是MB
增加service.cfg
define service{
use generic-service ; Name of service template to use
host_name db_31
service_description check_eth0_traffic
check_command check_traffic!2!4000,5000!6000,7000;该处设置的是kB，不是MB
}


在监控机器上安装nrpe 
之前已经将nagios 运行起来了,现在要做的事情是: 安装check_nrpe 插件 
在commands.cfg 中创建check_nrpe 的命令定义,因为只有commands.cfg 
中定义过的命令才能在services.cfg 中使用创建对被监控主机的监控项目 
1)安装check_nrpe 插件 
# tar -zxvf nrpe-2.8.1.tar.gz 
# cd nrpe-2.8.1 
# ./configure 
# make all 
# make install-plugin 
只运行这一步就行了,因为只需要check_nrpe 插件 
2)在apache 刚装好了nrpe,现在我们测试一下监控机使用 
check_nrpe 与被监控机运行的nrpedaemon 之间的通信. 
# /usr/local/nagios/libexec/check_nrpe -H 192.168.10.195 
NRPE v2.8.1 
看到已经正确返回了NRPE 的版本信息,说明一切正常. 
3)在commands.cfg 中增加对check_nrpe 的定义 
# vi /usr/local/nagios/etc/objects/commands.cfg 
在最后面增加如下内容 
#################################################################### 
# 'check_nrpe ' command definition 
define command{ 
command_name check_nrpe 
command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$ 
} 
意义如下 
command_name check_nrpe 
定义命令名称为check_nrpe,在services.cfg 中要使用这个名称. 
command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$ 
这是定义实际运行的插件程序.这个命令行的书写要完全按照check_nrpe 这个命令的 
用法.不知道用法的就用check_nrpe –h 查看-c 后面带的$ARG1$参数是传给nrpe 
daemon 执行的检测命令,之前说过了它必须是nrpe.cfg中所定义的那5 条命令中的其 
中一条.在services.cfg 中使用check_nrpe 的时候要用!带上这个参数 
########################################### 
举例： 
下面就可以在services.cfg 中定义对apache 主机磁盘容量的监控 
define service{ 
host_name apache 
被监控的主机名,这里注意必须是linux 且运行着nrpe,而且必须是hosts.cfg 中定义的 
service_description check-disk 
监控项目的名称 
check_command check_nrpe!check_disk 
监控命令是check_nrpe,是在commands.cfg 中定义的,带的参数是check_disk,是 
在nrpe.cfg 中定义的 
max_check_attempts 5 
normal_check_interval 3 
retry_check_interval 2 
check_period 24x7 
notification_interval 10 
notification_period 24x7 
notification_options w,u,c,r 
contact_groups sagroup 
} 
像这样将其余几个监控项目加进来.

监控远程主机原理图
NRPE 组成部分与检测类型
NRPE 总共由两部分组成:
check_nrpe 插件，位于监控主机上
NRPE daemon,运行在远程被监控的 Linux 主机上
当监控远程 Linux/UNIX 主机服务或资源时，工作流程如下：
nagios 会运行 check_nrpe 这个插件，并且会告诉它需要检查什么；
check_nrpe 插件会连接到远程的 NRPE daemon，所用的方式是 SSL；
NRPE daemon 会运行相应的 Nagios 插件来执行检查动作；
NPRE daemon 将检查的结果返回给 check_nrpe 插件，插件将其递交给 Nagios 做处理。
NRPE daemon 需要 Nagios 插件安装在远程的 Linux 主机上，否则 daemon 不能做任何的监控。
NRPE 的检测类型分为两种:
直接检测：检测的对象是运行 NRPE 的那台 Linux 主机的本地资源，原理如下:
直接使用 NRPE 插件监控远程 Linux/UNIX 主机的本地或者私有资源；如 CPU 负载、内存使用、SWAP 空间使用、硬盘等运行状况。
图 18. 直接检测结构图
直接检测结构图
间接检测：当运行 Nagios 的监控主机无法访问到某台被监控主机，但是运行 NRPE 的机器可以访问得到的时候，运行 NRPE 的主机就充当一个中间代理，将监控请求发送到被监控对象上。
图 19. 间接检测结构图
间接检测结构图
在服务器端安装 NRPE 安装
清单 15. 服务器安装 NRPE
# cd /usr/local/src/
# tar zxvf nrpe-2.12.tar.gz 
# cd nrpe-2.12
# ./configure && make all
# make install-plugin
# make install-daemon
# make install-daemon-config
修改命令定义文件
由于在 Nagios 命令定义文件 commands.cfg 没有 check_nrpe 命令， 因此需要对此文件进行修改与定义，配置细节如下图：
图 20. 在 commands.cfg 文件中增加 NRPE 配置
在 commands.cfg 文件中增加 NRPE 配置
定义被监控主机
在被监控或远程主机上增加 check_nrpe 的相关配置，由于 hosts.cfg 已定义了相应的主机，所以这里编辑文件 Nagios 服务器上的 services.cfg 文件即可
#vim /usr/local/nagios/etc/monitor/services.cfg
图 21. 在被监控主机，增加 NRPE 指令
在被监控主机，增加 NRPE 指令
查看配置文件是否正确
清单 16. 服务器安装 NRPE
# nagioscheck
重新加载配置文件
清单 17. Ngaios 配置加载
# /etc/init.d/nagios reload
回页首
在 Linux 客户端安装 NRPE 安装
安装 Nagios 插件 nagios-plugin
添加 nagios 用户名，且不允许 nagios 用户登录， 此用户用于与 Nagios 服务器通信所用。
清单 18. 客户端安装 nagios-plugin
# useradd -s /sbin/nulgin nagios
# tar -zxvf nagios-plugins-1.4.14.tar.gz
# cd nagios-plugins-1.4.14
#./configure
# make && make install
安装 NRPE
在 Linux 客户端安装 nrpe 程序包，根据编译提示向导完成安装操作。在安装的过程中会看到 NRPE 的端口为 5666，且可通过 Xinetd 服务来控制 nrpe 进程，具体实现步骤如下：
清单 19. 客户端安装 NRPE
#tar zxvf tar zxvf nrpe-2.12.tar.gz
# cd nrpe-2.12
#./configure
#make all
#make install-plugin
#make install-daemon
#make install-daemon-config
#make install-xinetd
#chown -R nagios:nagios /usr/local/nagios/
配置 NRPE
定义被监控的 Linux 主机的对象，监控此主机的 CPU 负载、登录用户数、磁盘分区、进程、swap 使用情况等，编辑/usr/local/nagios/etc/nrpe.cfg 文件， 内容如下示例：
清单 20. NRPE 配置与设定
command[check_users]=/usr/local/nagios/libexec/check_users -w 5 -c 10
command[check_load]=/usr/local/nagios/libexec/check_load -w 30,25,20 -c 60,55,40
command[check_sda3]=/usr/local/nagios/libexec/check_disk -w 15% -c 8% -p /dev/sda3
command[check_vg01]=/usr/local/nagios/libexec/check_disk -w 20% -c 10% -p /dev/vg01
command[check_zombie_procs]=/usr/local/nagios/libexec/check_procs -w 5 -c 10 -s Z
command[check_swap_1]=/usr/local/nagios/libexec/check_swap -w 20 -c 10
定义 Xinetd 服务支持 nrpe
这里只需要修改 only_from 项，增加 Ngaios 服务的地址即可，这样一来服务器与客户端就可进行 nrpe 会话，监控到 Linux 客户端相关信息，被监控端也更加容易维护管理，见下图：
#vim /etc/xinetd.d/nrpe
图 22. 定义 Xinetd 服务支持 nrpe
定义 Xinetd 服务支持 nrpe
定义服务端口
在 Linux 客户端"/etc/services" 文件增加一行
nrpe            5666/tcp                #Naigos_Client
测试 NRPE
由于 NRPE 相应的插件已经安装成功， 这里使用 check_nrpe 命令来验证是否 nrpe 是否正常运行，如果执行以下命令能够显示 NRPE 的具体版本信息，则表示 nrpe 运行正常，加载重启 xinetd 服务即可。
清单 21. NRPE 功能测试
#/usr/local/nagios/libexec/check_nrpe -H localhost
NRPE v2.12 
#/etc/init.d/xinetd restart
回页首
Nagios 管理平台界面介绍
通过上面所有的软件及插件的安装与配置，Nagios 监控系统架构成功的完成了；若想进一步扩展，如监控 Windows 平台，则需要在 Windowns 系统安装 NSClient 软件，并在 Nagios 服务器定义 windows.cfg 等文件，VMware 则需要 Nagios 官网下载相应的插件及模块文件，并在 Nagios 服务器编辑 command.cfg、hosts.cfg、services.cfg 文件，这里不过多的阐述，可分别参照以下表 6 和表 7 方法来进行：
Window 平台
#vim /usr/local/nagios/etc/monitor/windows.cfg
Windows 平台配置
define host{
use windows-server,hosts-pnp 
host_name Windowns Server 2003_192 
alias Remote win2003 192 
address 192.168.1.192 
}
define service{
use generic-service,services-pnp
host_name Windowns Server 2003_192
service_description NSClient++ Version
check_command check_nt!CLIENTVERSION
} }
………
VMware 平台
# vim/usr/local/nagios/etc/monitor/commands.cfg
VMware 平台配置
define command{
command_name check_esx3_host_net_usage
command_line $USER1$/check_esx3 -H $HOSTADDRESS$ -u $ARG1$ -p $ARG2$ -l net -s usage -w $ARG3$ -c $ARG4$
}
define command{
command_name check_esx3_host_runtime_issues
command_line $USER1$/check_esx3 -H $HOSTADDRESS$ -u $ARG1$ -p $ARG2$ -l runtime -s issues
……
回页首
当前状态界面介绍
通过浏览器访问 Nagios 服务器，从当前页面可以看到当前主机和服务的健康状态，网络运行情况，以及服务与主机的检测时间等，如下图 15，可以看到我的 Nagios 服务器有一台服务器处于宕机状态。
图 23. Nagios 当前状态界面
Nagios 当前状态界面
回页首
系统主机界面介绍
点击 Hosts 标签，可以看到 Nagios 服务器监控多少台主机状态及当前主机的活跃状态，从下面图示可以看到监控的主机类型有，Windwos，Linux，Switch，FC-Swith，Storage 等，若想进一步了解每台主机的服务，系统负载等被监控的对象，可以直接点击某个主机，也可点击小太阳图标来查看当前被监控的主机的生成的图表信息。
图 24. 所有被监控主机界面
所有被监控主机界面
下图是主机组页面，可看到 Nagios 服务器将相对应的主机组或监控的对象进行了分组定义，同时可以具体看到当前总共有多少台主机，活跃的主机，服务的健康状态等等
图 25. 主机组和服务组界面
主机组和服务组界面
报告界面介绍
图 26，主要是记录一些事件信息，记录某台主机所监控对象的状态，若超出自己定义的配置，则会提示一般警告或严重告警信息，一旦主机恢复则自动告知用户当前主机的状态：
图 26. 事件报告管理界面
事件报告管理界面
同时可以将事件信息以邮件的方式告知联系人，让其在第一时间了解到服务器的健康状态等信息,及时作出处理，提供服务器的工作效率等,如下图：
图 27. 邮件通知界面
邮件通知界面
关于 Nagios 管理界面详细，可在左侧的导航菜单去查阅相应的具体功能，如：当前状态、拓补图、总览、问题故障、报告、配置等信息，均可根据自己的生产环境来制定。


邮件通知：
/usr/local/bin/sendEmail -f dbsender@capvision.com -t wliu@capvision.com -s mail.capvision.com -u “from nagios” -xu dbsender -xp 1q2w3e4r -m happy,again.  

